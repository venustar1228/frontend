{"version":3,"sources":["./src/app/components/settings/settings-routing.module.ts","./src/app/components/settings/settings.module.ts","./src/app/components/settings/general/general.component.ts","./src/app/components/settings/general/general.component.html","./src/app/components/settings/changepassword/changepassword.component.ts","./src/app/components/settings/changepassword/changepassword.component.html","./src/app/components/settings/wallet/wallet.component.ts","./src/app/components/settings/wallet/wallet.component.html","./src/app/components/settings/transfer/transfer.component.ts","./src/app/components/settings/transfer/transfer.component.html"],"names":[],"mappings":"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","file":"components-settings-settings-module-es2015.js","sourcesContent":["/*\nProject : Cryptotrades\nFileName :  settings-routing.module.ts\nAuthor : LinkWell\nFile Created : 21/07/2021\nCopyRights : LinkWell\nPurpose : This is the routing module which used to load routes for setting module\n*/\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChangepasswordComponent } from './changepassword/changepassword.component';\nimport { GeneralComponent } from './general/general.component';\nimport { WalletComponent } from './wallet/wallet.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'wallet',\n    pathMatch: 'full',\n  },\n  {\n    path: 'wallet',\n    component: WalletComponent\n  },\n  {\n    path: 'general',\n    component: GeneralComponent\n  },\n  {\n    path: 'changepassword',\n    component: ChangepasswordComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingsRoutingModule {}\n","/*\nProject : Cryptotrades\nFileName :  settings.module.ts\nAuthor : LinkWell\nFile Created : 21/07/2021\nCopyRights : LinkWell\nPurpose : This is the module which load component and module for setting \n*/\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { MomentModule } from 'ngx-moment';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { WalletComponent } from './wallet/wallet.component';\nimport { GeneralComponent } from './general/general.component';\nimport { ChangepasswordComponent } from './changepassword/changepassword.component';\nimport { TransferComponent } from './transfer/transfer.component';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    SettingsRoutingModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MomentModule.forRoot({\n      relativeTimeThresholdOptions: {\n        'm': 59\n      }\n    }),\n    AlertModule\n  ],\n  declarations: [WalletComponent, GeneralComponent, ChangepasswordComponent, TransferComponent]\n})\nexport class SettingsModule { }\n","/*\nProject : Cryptotrades\nFileName :  general.component.ts\nAuthor : LinkWell\nFile Created : 21/07/2021\nCopyRights : LinkWell\nPurpose : This is the component file which used to show edit profile screen for user\n*/\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { config } from 'src/app/constants/config';\nimport { UserService } from 'src/app/services/user.service';\n@Component({\n  selector: 'app-general',\n  templateUrl: './general.component.html',\n  styleUrls: ['./general.component.css']\n})\nexport class GeneralComponent implements OnInit {\n  button_title = \"Save\"\n  generalForm: FormGroup;\n  isAPILoading: boolean = false\n  currentUser:any;\n  userInfo:any;\n  constructor(\n    public formbuilder: FormBuilder,\n    private snackBar: MatSnackBar,\n    private userService: UserService\n  ) {\n    this.currentUser = this.userService.getUser()\n    this.generalForm = formbuilder.group({\n      'username': [null, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(255)])],\n      'email': [null, Validators.compose([Validators.required, Validators.minLength(3),Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')])],\n      'first_name': [null, Validators.compose([Validators.required, Validators.maxLength(32)])],\n      'last_name': [null, Validators.compose([Validators.required, Validators.maxLength(32)])],\n    })\n    this.getProfileInfo();\n   }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * This is the function which used to get profile information of logged in user\n   */\n  getProfileInfo = () => {\n    this.userService.viewProfile(this.currentUser.user_id).subscribe(result=>{\n      var resulter:any = result;\n      this.userInfo = resulter.result;\n      this.generalForm.controls.username.setValue(this.userInfo.username)\n      this.generalForm.controls.email.setValue(this.userInfo.email)\n      this.generalForm.controls.first_name.setValue(this.userInfo.first_name)\n      this.generalForm.controls.last_name.setValue(this.userInfo.last_name)\n    })\n  }  \n\n\n  /**\n   * This is the function which used update profile information with validation\n   */\n  onSubmit(formData:any) {\n    if (this.generalForm.valid && this.button_title == \"Save\") {\n      this.button_title = \"Saving...\"\n      this.updateApi({\n        username: formData.value.username,\n        first_name: formData.value.first_name,\n        last_name: formData.value.last_name,\n        email: formData.value.email\n      });\n    } else {\n      if (this.generalForm.controls.username.invalid) {\n        if (this.generalForm.controls.username.errors) {\n          if (this.generalForm.controls.username.errors.required) {\n            this.snackBar.open('Username is required', \"\", { duration: 2000 });\n          } else if (this.generalForm.controls.username.errors.minlength) {\n            this.snackBar.open('Username required minimum 3 characters', \"\", { duration: 2000 });\n          } else if (this.generalForm.controls.username.errors.maxlength) {\n            this.snackBar.open('Username required maximum 255 characters', \"\", { duration: 2000 });\n          } \n        }\n      } else if (this.generalForm.controls.email.invalid) {\n        if (this.generalForm.controls.email.errors) {\n          console.log(this.generalForm.controls.email.errors);\n          if (this.generalForm.controls.email.errors.required) {\n            this.snackBar.open('Email is required', \"\", { duration: 2000 });\n          } else if (this.generalForm.controls.email.errors.minlength) {\n            this.snackBar.open('Email required minimum 3 characters', \"\", { duration: 2000 });\n          } else if (this.generalForm.controls.email.errors.pattern) {\n            this.snackBar.open('Invalid Email', \"\", { duration: 2000 });\n          }\n        }\n      } else if (this.generalForm.controls.first_name.invalid) {\n        if (this.generalForm.controls.first_name.errors) {\n          if (this.generalForm.controls.first_name.errors.required) {\n            this.snackBar.open('First Name is required', \"\", { duration: 2000 });\n          } else if (this.generalForm.controls.first_name.errors.minlength) {\n            this.snackBar.open('First Name required minimum 3 characters', \"\", { duration: 2000 });\n          } else if (this.generalForm.controls.first_name.errors.maxlength) {\n            this.snackBar.open('First Name required maximum 32 characters', \"\", { duration: 2000 });\n          } \n        }\n      } else if (this.generalForm.controls.last_name.invalid) {\n        if (this.generalForm.controls.last_name.errors) {\n          if (this.generalForm.controls.last_name.errors.required) {\n            this.snackBar.open('Last Name is required', \"\", { duration: 2000 });\n          } else if (this.generalForm.controls.last_name.errors.minlength) {\n            this.snackBar.open('Last Name required minimum 3 characters', \"\", { duration: 2000 });\n          } else if (this.generalForm.controls.last_name.errors.maxlength) {\n            this.snackBar.open('Last Name required maximum 32 characters', \"\", { duration: 2000 });\n          } \n        }\n      }\n    }\n  }\n\n  /**\n   * This is the function which used update profile information through api\n   */\n  updateApi = (params:any) => {\n    this.isAPILoading = true;\n     this.userService.updateApi(params,this.currentUser.user_id).subscribe(result=>{\n       this.isAPILoading = false;\n       if(result.status == true) {\n        localStorage.setItem('token',result.return_id);\n        this.snackBar.open('General settings updated successfully', \"\", { duration: 2000 });\n        location.href = config.base_url\n       } else {\n        this.snackBar.open(result.message, \"\", { duration: 2000 });\n       }\n       this.button_title = \"Save\"\n     })\n  }\n\n}\n","<div class=\"pagecontainer\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              General Settings \n            </div>\n            <div class=\"card-body\">\n                <form [formGroup]=\"generalForm\" (ngSubmit)=\"onSubmit(generalForm)\">\n                <div class=\" row\">\n                    <div class=\"col-sm-6\">\n                        <div class=\"form-group\">\n                            <label for=\"username\">User Name</label>\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Enter User Name\" formControlName=\"username\" required>\n                        </div>\n                    </div>\n                    <div class=\"col-sm-6\">\n                        <div class=\"form-group\">\n                            <label for=\"email\">Email</label>\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Enter User Name\" formControlName=\"email\" required>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\" row\">\n                    <div class=\"col-sm-6\">\n                        <div class=\"form-group\">\n                            <label for=\"username\">First Name</label>\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Enter First Name\" formControlName=\"first_name\" required>\n                        </div>\n                    </div>\n                    <div class=\"col-sm-6\">\n                        <div class=\"form-group\">\n                            <label for=\"email\">Last Name</label>\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Enter Last Name\" formControlName=\"last_name\" required>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <button type=\"submit\" class=\"btn btn-primary px-4\">{{button_title}}</button>\n                    </div>\n                </div>\n                </form>\n          \n            </div>\n          </div>\n        </div>\n     </div>\n</div>","/*\nProject : Cryptotrades\nFileName :  changepassword.component.ts\nAuthor : LinkWell\nFile Created : 21/07/2021\nCopyRights : LinkWell\nPurpose : This is the component file which used to show change password screen for user\n*/\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { config } from 'src/app/constants/config';\nimport { UserService } from 'src/app/services/user.service';\n@Component({\n  selector: 'app-changepassword',\n  templateUrl: './changepassword.component.html',\n  styleUrls: ['./changepassword.component.css']\n})\nexport class ChangepasswordComponent implements OnInit {\n  button_title = \"Save\"\n  passwordForm: FormGroup;\n  isAPILoading: boolean = false\n  currentUser:any;\n  userInfo:any;\n  constructor(\n    public formbuilder: FormBuilder,\n    private snackBar: MatSnackBar,\n    private userService: UserService\n  ) {\n    this.currentUser = this.userService.getUser()\n    this.passwordForm = formbuilder.group({\n      'password': [null,Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(32)])],\n      'confirm_password': [null,Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(32)])]\n    })\n    this.getProfileInfo();\n   }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * This is the function which used to get profile information of logged in user\n   */\n  getProfileInfo = () => {\n    this.userService.viewProfile(this.currentUser.user_id).subscribe(result=>{\n      var resulter:any = result;\n      this.userInfo = resulter.result;\n    })\n  }  \n\n  /**\n   * This is the function which used to change password with validation\n   */\n  onSubmit(formData:any) {\n    if (this.passwordForm.valid && this.button_title == \"Save\") {\n      if(formData.value.password != formData.value.confirm_password) {\n        this.snackBar.open('Password Mismatch', \"\", { duration: 2000 });\n        return;\n      }\n      this.button_title = \"Saving...\"\n      this.updateApi({\n        password: formData.value.password,\n      });\n    } else {\n      if (this.passwordForm.controls.password.invalid) {\n        if (this.passwordForm.controls.password.errors) {\n          if (this.passwordForm.controls.password.errors.required) {\n            this.snackBar.open('Password is required', \"\", { duration: 2000 });\n          } else if (this.passwordForm.controls.password.errors.minlength) {\n            this.snackBar.open('Password required minimum 3 characters', \"\", { duration: 2000 });\n          } else if (this.passwordForm.controls.password.errors.maxlength) {\n            this.snackBar.open('Password required maximum 32 characters', \"\", { duration: 2000 });\n          } \n        }\n      } else if (this.passwordForm.controls.confirm_password.invalid) {\n        if (this.passwordForm.controls.confirm_password.errors) {\n          if (this.passwordForm.controls.confirm_password.errors.required) {\n            this.snackBar.open('Confirm Password is required', \"\", { duration: 2000 });\n          } else if (this.passwordForm.controls.confirm_password.errors.minlength) {\n            this.snackBar.open('Confirm Password required minimum 3 characters', \"\", { duration: 2000 });\n          } else if (this.passwordForm.controls.confirm_password.errors.maxlength) {\n            this.snackBar.open('Confirm Password required maximum 32 characters', \"\", { duration: 2000 });\n          } \n        }\n      }\n    }\n     \n  }\n\n  /**\n   * This is the function which used to change password through api\n   */\n  updateApi = (params:any) => {\n    this.isAPILoading = true;\n     this.userService.updateApi(params,this.currentUser.user_id).subscribe(result=>{\n       this.isAPILoading = false;\n       if(result.status == true) {\n        localStorage.setItem('token',result.return_id);\n        this.snackBar.open('Password updated successfully', \"\", { duration: 2000 });\n        location.href = config.base_url\n       } else {\n        this.snackBar.open(result.message, \"\", { duration: 2000 });\n       }\n       this.button_title = \"Save\"\n     })\n  }\n\n}\n","<div class=\"pagecontainer\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              Update Password\n            </div>\n            <div class=\"card-body\">\n                <form [formGroup]=\"passwordForm\" (ngSubmit)=\"onSubmit(passwordForm)\">\n                <div class=\" row\">\n                    <div class=\"col-sm-6\">\n                        <div class=\"form-group\">\n                            <label for=\"password\">Password</label>\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Enter Password\" formControlName=\"password\" required>\n                        </div>\n                    </div>\n                    <div class=\"col-sm-6\">\n                        <div class=\"form-group\">\n                            <label for=\"confirm_password\">Confirm Password</label>\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Enter Confirm Password\" formControlName=\"confirm_password\" required>\n                        </div>\n                    </div>\n                </div>\n\n\n\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <button type=\"submit\" class=\"btn btn-primary px-4\">{{button_title}}</button>\n                    </div>\n                </div>\n                </form>\n          \n            </div>\n          </div>\n        </div>\n     </div>\n</div>","/*\nProject : Cryptotrades\nFileName :  wallet.component.ts\nAuthor : LinkWell\nFile Created : 21/07/2021\nCopyRights : LinkWell\nPurpose : This is the component file which used to show user ethereum address and copy option\n*/\nimport { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { Clipboard } from \"@angular/cdk/clipboard\"\nimport { ItemService } from 'src/app/services/item.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport { TransferComponent } from '../transfer/transfer.component';\n@Component({\n  selector: 'app-wallet',\n  templateUrl: './wallet.component.html',\n  styleUrls: ['./wallet.component.css']\n})\nexport class WalletComponent implements OnInit {\n  walletInput:string= \"\"\n  currentUser:any;\n  userInfo:any;\n  walletAmount:number = 0;\n  constructor(\n    private userService: UserService,\n    private clipboard: Clipboard,\n    private snackBar: MatSnackBar,\n    private itemService: ItemService,\n    public dialog: MatDialog,\n  ) { \n    this.currentUser = this.userService.getUser();\n    this.getProfileInfo();\n    this.userBalance();\n  }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * This is the function which used to get profile information of logged in user\n   */\n  getProfileInfo = () => {\n    this.userService.viewProfile(this.currentUser.user_id).subscribe(result=>{\n      var resulter:any = result;\n      this.userInfo = resulter.result;\n      console.log(this.userInfo)\n      this.walletInput = this.userInfo.public_key;\n    })\n  }\n\n  /**\n   * This is the function which used to get balance from user ethereum wallet\n   */\n  userBalance = () => {\n    this.itemService.checkBalance().subscribe(result=>{\n       if(result.status == true) {\n         this.walletAmount = result.return_id.toFixed(2);\n       }\n    })\n  }\n\n  /**\n   * This is the function which open transfer component for withdrawal\n   */\n  tranferAction = () => {\n    const dialogRef = this.dialog.open(TransferComponent);\n    dialogRef.afterClosed().subscribe(result => {\n      if(result) {\n        if (result.type == \"reload\") {\n          this.userBalance();\n        }\n      }\n    });\n  }\n\n  /**\n   * This is the function which used to compy ethereum address in clipboard\n   */\n  copyAddress=()=> {\n    this.clipboard.copy(this.userInfo.public_key)\n    this.snackBar.open('Ethereum address copied', \"\", { duration: 2000 });\n }\n\n}\n","<div class=\"pagecontainer\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              Wallet \n            </div>\n            <div class=\"card-body\">\n        \n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"\">\n                            <label for=\"name\">Your Wallet Balance : {{walletAmount}} ETH</label>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <div class=\"col-12\">\n                        <div class=\"input-group\">\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"walletInput\" disabled>\n                            <div class=\"input-group-append\" (click)=\"copyAddress()\"><span class=\"input-group-text\"><i class=\"fa fa-copy\"></i></span></div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-6\">\n                        <button type=\"submit\" class=\"btn btn-primary px-4\" (click)=\"tranferAction()\">Transfer</button>\n                    </div>\n                </div>\n          \n            </div>\n          </div>\n        </div>\n     </div>\n</div>","/*\nProject : Cryptotrades\nFileName :  transfer.component.ts\nAuthor : LinkWell\nFile Created : 21/07/2021\nCopyRights : LinkWell\nPurpose : This is the component file which used to show withdrawal screen for user\n*/\nimport { Component, OnInit, Inject } from '@angular/core';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { ItemService } from 'src/app/services/item.service';\n@Component({\n  selector: 'app-transfer',\n  templateUrl: './transfer.component.html',\n  styleUrls: ['./transfer.component.css']\n})\nexport class TransferComponent implements OnInit {\n  button_title:string = \"Transfer\";\n  transferForm: FormGroup;\n  constructor(\n    public formbuilder: FormBuilder,\n    public dialogRef: MatDialogRef<TransferComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private snackBar: MatSnackBar,\n    private itemService:ItemService\n  ) { \n    this.transferForm = formbuilder.group({\n      'eth_address': [null, Validators.compose([Validators.required])],\n      'amount': [null,Validators.compose([Validators.required, Validators.pattern(\"^[0-9]+(.[0-9]{0,5})?$\")])]\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * This is the function which used to send ethereum outside with validation\n   */\n  onSubmit(formData: any) {\n    if (this.transferForm.valid && this.button_title == \"Transfer\") {\n      this.button_title = \"Transferring\";\n      this.transferApi({\n        eth_address:formData.value.eth_address,\n        amount: formData.value.amount,\n      });\n    } else {\n      if (this.transferForm.controls.eth_address.invalid) {\n        if (this.transferForm.controls.eth_address.errors) {\n          if (this.transferForm.controls.eth_address.errors.required) {\n            this.snackBar.open('Ethereum address is required', \"\", { duration: 2000 });\n          } \n        }\n      } else if (this.transferForm.controls.amount.invalid) {\n        if (this.transferForm.controls.amount.errors) {\n          if (this.transferForm.controls.amount.errors.required) {\n            this.snackBar.open('Ethereum value is required', \"\", { duration: 2000 });\n          } else {\n            this.snackBar.open('Ethereum value should be numeric', \"\", { duration: 2000 });\n          } \n        }\n      }\n    }\n  }\n\n  /**\n   * This is the function which used to send ethereum outside through api\n   */\n  transferApi = (params:any) => {\n     this.itemService.transferBalance(params).subscribe(result=>{\n       if(result.status == true) {\n         this.dialogRef.close({type:'reload'});\n       }\n       this.snackBar.open(result.message, \"\", { duration: 2000 });\n       this.button_title = \"Transfer\"\n     })\n  }\n\n  /**\n   * This is the function which used to close transfer dialog\n   */\n  closePop = () => {\n    this.dialogRef.close();\n  }\n}\n","\n<div class=\"userForm\">\n    <div class=\"userFormInner\">\n        <h2>\n            Transfer ETH\n        </h2>\n        <div class=\"pop_close\" (click)=\"closePop()\">\n            <i class=\"cil-x\"></i>\n        </div>\n        <div class=\"formContainer\">\n            <form [formGroup]=\"transferForm\" (ngSubmit)=\"onSubmit(transferForm)\">\n                <div class=\"form-group\">\n                    <label for=\"eth_address\">Ethereum Address</label>\n                    <input type=\"text\" placeholder=\"Enter Ethereum Address\" formControlName=\"eth_address\" class=\"form-control\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"amount\">ETH Value</label>\n                    <input type=\"text\" placeholder=\"Enter Ethereum Value\" formControlName=\"amount\" class=\"form-control\">\n                </div>\n                <div class=\"form-group\">\n                    <button type=\"submit\" class=\"btn btn-primary\">{{button_title}}</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>"],"sourceRoot":"webpack:///"}