{"version":3,"sources":["webpack:///src/app/components/collections/collections-routing.module.ts","webpack:///src/app/components/collections/detailcollection/detailcollection.component.ts","webpack:///src/app/components/collections/detailcollection/detailcollection.component.html","webpack:///src/app/UI/collectionitem/collectionitem.module.ts","webpack:///src/app/components/collections/collections.module.ts","webpack:///src/app/UI/skeleton/collectionskeleton/collectionskeleton.module.ts","webpack:///src/app/components/collections/activitycollection/activitycollection.component.ts","webpack:///src/app/components/collections/activitycollection/activitycollection.component.html","webpack:///src/app/components/collections/mycollection/mycollection.component.ts","webpack:///src/app/components/collections/mycollection/mycollection.component.html","webpack:///src/app/components/collections/addcollection/addcollection.component.ts","webpack:///src/app/components/collections/addcollection/addcollection.component.html","webpack:///src/app/UI/skeleton/collectionskeleton/collectionskeleton.component.ts","webpack:///src/app/UI/skeleton/collectionskeleton/collectionskeleton.component.html","webpack:///src/app/UI/collectionitem/collectionitem.component.ts","webpack:///src/app/UI/collectionitem/collectionitem.component.html","webpack:///src/app/components/collections/viewcollection/viewcollection.component.ts","webpack:///src/app/components/collections/viewcollection/viewcollection.component.html"],"names":["routes","path","redirectTo","pathMatch","component","canActivate","CollectionsRoutingModule","forChild","imports","exports","DetailcollectionComponent","collectionService","userService","router","route","itemService","snackBar","mediaBase","media_path","ownCollection","collectionID","collection_banner","collection_logo","collection_desc","collection_name","loading","recent","is_recent_viewall","minted","is_minted_viewall","onauction","is_onauction_viewall","getItemCollectionList","params","collection_id","collectionInfo","_id","listByCollectionItem","subscribe","result","status","data","length","splice","itemEvent","event","type","navigate","item","viewAllAction","queryParams","currentUser","getUser","subscription","id","getCollectionInfo","console","log","unsubscribe","viewCollection","banner","image","name","description","author_id","user_id","selector","templateUrl","styleUrls","CollectionitemModule","declarations","providers","CollectionsModule","forRoot","relativeTimeThresholdOptions","CollectionskeletonModule","ActivitycollectionComponent","blockChainName","blockchain","blockChainExplorer","blockchain_url","histories","historyLoading","pageHistory","totalHistoryDocs","limitHistory","hasNextHistoryPage","getHistoryList","page","getHistory","tempArray","totalDocs","offset","nextHistoryPage","prevHistoryPage","url","replace","split","pop","MycollectionComponent","isApiLoading","collections","searchInput","keyword","getCollectionList","listCollection","index","element","push","onNextPage","collectionEvent","searchAction","resetAction","AddcollectionComponent","formbuilder","page_title","button_title","spinner","logoname","bannername","resulter","updateCollectionInfo","collectionForm","controls","setValue","royalties","uploadLogo","logouploader","uploadAll","uploadBanner","banneruploader","deleteLogo","deleteBanner","onSubmit","formData","valid","open","duration","updateCollectionApi","value","collectionCreateApi","invalid","errors","required","minlength","maxlength","updateCollection","message","addCollection","group","compose","minLength","maxLength","pattern","base_url","allowedMimeType","autoUpload","isHTML5","queueLimit","removeAfterUpload","headers","onBuildItemForm","fileItem","form","onBeforeUploadItem","withCredentials","onAfterAddingFile","file","ext","username","Date","getTime","onCompleteItem","response","that","setTimeout","onWhenAddingFileFailed","CollectionskeletonComponent","CollectionitemComponent","collectionAction","emit","collection","ViewcollectionComponent","items","deleteAction","confirmationModal","hide","deleteCollection","getItemList","listItem","confirmationItemModal","show","selectedItem","publishItem","item_id","itemDeleteAction","findIndex","itemobj","deleteItem"],"mappings":"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","file":"components-collections-collections-module-es5.js","sourcesContent":["/*\nProject : Cryptotrades\nFileName :  collections-routing.module.ts\nAuthor : LinkWell\nFile Created : 21/07/2021\nCopyRights : LinkWell\nPurpose : This is the routing module which used to define collection related routes\n*/\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserGuard } from 'src/app/guard/user.guard';\nimport { ActivitycollectionComponent } from './activitycollection/activitycollection.component';\nimport { AddcollectionComponent } from './addcollection/addcollection.component';\nimport { DetailcollectionComponent } from './detailcollection/detailcollection.component';\nimport { MycollectionComponent } from './mycollection/mycollection.component';\nimport { ViewcollectionComponent } from './viewcollection/viewcollection.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'mycollection',\n    pathMatch: 'full',\n  },\n  {\n    path: 'mycollection',\n    component: MycollectionComponent,\n    canActivate:[UserGuard]\n  },\n  {\n    path: 'add',\n    component: AddcollectionComponent,\n    canActivate:[UserGuard]\n  },\n  {\n    path: 'edit/:id',\n    component: AddcollectionComponent,\n    canActivate:[UserGuard]\n  },\n  {\n    path: 'view/:id',\n    component: ViewcollectionComponent\n  },\n  {\n    path: 'detail/:id',\n    component: DetailcollectionComponent\n  },\n  {\n    path: 'activity/:id',\n    component: ActivitycollectionComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CollectionsRoutingModule {}\n","/*\nProject : Cryptotrades\nFileName :  detailcollection.component.ts\nAuthor : LinkWell\nFile Created : 21/07/2021\nCopyRights : LinkWell\nPurpose : This is the component which show detail page of collection with for collection owner\n*/\nimport { Component, OnInit } from '@angular/core';\nimport { config } from 'src/app/constants/config';\nimport { CollectionService } from 'src/app/services/collection.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\nimport { ItemService } from 'src/app/services/item.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n@Component({\n  selector: 'app-detailcollection',\n  templateUrl: './detailcollection.component.html',\n  styleUrls: ['./detailcollection.component.css']\n})\nexport class DetailcollectionComponent implements OnInit {\n  subscription:any;\n  mediaBase:string = config.media_path;\n  ownCollection:boolean = false;\n  currentUser:any;\n  collectionID:string = \"\";\n  collectionInfo:any;\n  collection_banner:string = \"default.png\"\n  collection_logo:string = \"default.png\"\n  collection_desc:string = \"\";\n  collection_name:string = \"\";\n\n  loading: boolean = true;\n\n  recent:any = [];\n  is_recent_viewall:boolean = false;\n  minted:any = []\n  is_minted_viewall:boolean = false;\n  onauction:any = []\n  is_onauction_viewall:boolean = false;\n  constructor(\n    private collectionService: CollectionService,\n    private userService: UserService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private itemService: ItemService,\n    private snackBar: MatSnackBar,\n  ) { \n    this.currentUser = this.userService.getUser();\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.route.params.subscribe(params => {\n      if(params.id) {\n        this.collectionID = params.id;\n        this.getCollectionInfo();\n      } else {\n        this.collectionID = \"\"\n      }\n      console.log(params) //log the entire params object\n    });\n  }\n\n  ngOnDestroy() {\n    if(this.subscription) {\n      this.subscription.unsubscribe()\n    }\n  }\n\n  /**\n   * This is the function which used to get collection detail\n   */\n  getCollectionInfo() {\n    this.collectionService.viewCollection({\n      collection_id:this.collectionID\n    }).subscribe(result=>{\n      this.collectionInfo = result.result;\n      this.collection_banner = this.collectionInfo.banner;\n      this.collection_logo = this.collectionInfo.image;\n      this.collection_name = this.collectionInfo.name;\n      this.collection_desc = this.collectionInfo.description;\n      if(this.currentUser != null) {\n        this.ownCollection = (this.collectionInfo.author_id == this.currentUser.user_id) ? true : false;\n      }\n      this.getItemCollectionList();\n    })\n  }\n\n\n  /**\n   * This is the function which used to show item list by collection\n   */\n  getItemCollectionList = () => {\n    this.loading = true;\n    var params = {\n      collection_id: this.collectionInfo._id,\n    }\n    this.itemService.listByCollectionItem(params).subscribe(result=>{\n      this.loading = false;\n      if(result.status == true) {\n          this.recent = result.data.recent;\n          this.is_recent_viewall = (this.recent.length>4) ? true : false\n          if(this.recent.length>4) {\n              this.recent.splice(3,1)\n          }\n          this.minted = result.data.minted\n          this.is_minted_viewall = (this.minted.length>4) ? true : false\n          if(this.minted.length>4) {\n              this.minted.splice(3,1)\n          }\n          this.onauction = result.data.onauction\n          this.is_onauction_viewall = (this.onauction.length>4) ? true : false\n          if(this.onauction.length>4) {\n              this.onauction.splice(3,1)\n          }\n      }\n     this.loading = false;\n    })\n  }\n\n  /**\n   * This is the output function which used to navigate user to detail page\n   */\n  itemEvent = (event:any) => {\n    if(event.type == \"view\") {\n      this.router.navigate(['/item/view/'+event.item._id])\n    } \n  }  \n  \n  /**\n   * This is the output function which used to navigate user to marketplace page\n   */\n  viewAllAction = (type:string) => {\n    this.router.navigate(['/marketplace'],{ queryParams: { collection_id:this.collectionID,type:type  }})\n  }\n\n}\n","<div class=\"appContainer\">\n    <div class=\"collectionHeader\">\n        <div class=\"collectionCover\">\n            <img [src]=\"mediaBase + '/images/collection/banner/' + collection_banner\" />\n        </div>\n        <div class=\"collectionLogo\">\n            <div class=\"collectionLogoInner\">\n                <img [src]=\"mediaBase+'/images/collection/logo/'+collection_logo\">\n            </div>\n        </div>\n    </div>\n    <div class=\"collectionSubHeader\" *ngIf=\"collectionInfo!=null\">\n        <h2>{{collection_name}}</h2>\n        <div class=\"collection_stats\">\n            <ul>\n                <li><span>{{collectionInfo.item_count_str}}</span><label>Items</label></li>\n                <li><span>{{collectionInfo.royalties}}%</span><label>Royalties</label></li>\n                <li><span>{{collectionInfo.volume_traded_str}}</span><label>Volume Traded</label></li>\n            </ul>\n        </div>\n        <p>{{collection_desc}}</p>\n    </div>\n\n    <div class=\"collectionMainContainer\">\n        <div class=\"container\">\n            <div class=\"listContainer\" *ngIf=\"recent.length>0 || loading\">\n                <div class=\"listContainerHeader\">\n                   <h2><i class=\"cil-album\"></i> Recently Listed</h2>\n                   <div class=\"viewall\" *ngIf=\"is_recent_viewall\" (click)=\"viewAllAction('recent')\">\n                     View All <i class=\"icon-arrow-right\"></i> \n                   </div>\n                </div>\n                <div class=\"listContainerContent\">\n                  <app-gridskeleton *ngIf=\"loading\"></app-gridskeleton>\n                  <div class=\"row\" *ngIf=\"recent.length>0\">\n                    <div *ngFor=\"let item of recent\" class=\"col-md-3\">\n                          <app-item [item]=\"item\" (itemEvent)=\"itemEvent($event)\"> </app-item>\n                    </div>\n                  </div>\n                </div>\n            </div>\n            <div class=\"listContainer\" *ngIf=\"minted.length>0 || loading\">\n              <div class=\"listContainerHeader\">\n                 <h2><i class=\"cil-fire\"></i>Newly Minted</h2>\n                 <div class=\"viewall\" *ngIf=\"is_minted_viewall\" (click)=\"viewAllAction('minted')\">\n                   View All <i class=\"icon-arrow-right\"></i> \n                 </div>\n              </div>\n              <div class=\"listContainerContent\">\n                <app-gridskeleton *ngIf=\"loading\"></app-gridskeleton>\n                <div class=\"row\" *ngIf=\"minted.length>0\">\n                  <div *ngFor=\"let item of minted\" class=\"col-md-3\">\n                        <app-item [item]=\"item\" (itemEvent)=\"itemEvent($event)\"> </app-item>\n                  </div>\n                </div>\n              </div>\n          </div>\n          <div class=\"listContainer\" *ngIf=\"onauction.length>0 || loading\">\n            <div class=\"listContainerHeader\">\n               <h2><i class=\"cil-graph\"></i>On Auction</h2>\n               <div class=\"viewall\" *ngIf=\"is_onauction_viewall\" (click)=\"viewAllAction('onauction')\">\n                 View All <i class=\"icon-arrow-right\"></i> \n               </div>\n            </div>\n            <div class=\"listContainerContent\">\n              <app-gridskeleton *ngIf=\"loading\"></app-gridskeleton>\n              <div class=\"row\" *ngIf=\"onauction.length>0\">\n                <div *ngFor=\"let item of onauction\" class=\"col-md-3\">\n                      <app-item [item]=\"item\" (itemEvent)=\"itemEvent($event)\"> </app-item>\n                </div>\n              </div>\n            </div>\n        </div>\n        </div>\n    </div>\n</div>\n\n","/*\nProject : Cryptotrades\nFileName :  collectionitem.module.ts\nAuthor : LinkWell\nFile Created : 21/07/2021\nCopyRights : LinkWell\nPurpose : This is the module file which used to define collection item related component and module\n*/\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CollectionitemComponent } from \"./collectionitem.component\";\nimport {MatIconModule} from '@angular/material/icon';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatIconModule\n    ],\n    exports: [CollectionitemComponent],\n    declarations: [CollectionitemComponent],\n    providers: [],\n})\nexport class CollectionitemModule {\n}","/*\nProject : Cryptotrades\nFileName :  collections.module.ts\nAuthor : LinkWell\nFile Created : 21/07/2021\nCopyRights : LinkWell\nPurpose : This is the module which used to load collection related module and components\n*/\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { CollectionsRoutingModule } from './collections-routing.module';\nimport { MomentModule } from 'ngx-moment';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { MycollectionComponent } from './mycollection/mycollection.component';\nimport { NodataModule } from 'src/app/UI/nodata/nodata.module';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { CollectionskeletonModule } from 'src/app/UI/skeleton/collectionskeleton/collectionskeleton.module';\nimport { AddcollectionComponent } from './addcollection/addcollection.component';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { LoaderModule } from 'src/app/UI/loader/loader.module';\nimport { ViewcollectionComponent } from './viewcollection/viewcollection.component';\nimport { CollectionitemModule } from 'src/app/UI/collectionitem/collectionitem.module';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { ItemskeletonModule } from 'src/app/UI/skeleton/itemskeleton/itemskeleton.module';\nimport { ItemModule } from 'src/app/UI/item/item.module';\nimport { DetailcollectionComponent } from './detailcollection/detailcollection.component';\nimport { GridskeletonModule } from 'src/app/UI/skeleton/gridskeleton/gridskeleton.module';\nimport { ActivitycollectionComponent } from './activitycollection/activitycollection.component';\n@NgModule({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    CollectionsRoutingModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MomentModule.forRoot({\n      relativeTimeThresholdOptions: {\n        'm': 59\n      }\n    }),\n    AlertModule.forRoot(),\n    ModalModule.forRoot(),\n\n    NodataModule,\n    InfiniteScrollModule,\n    CollectionskeletonModule,\n    ItemskeletonModule,\n    FileUploadModule,\n    LoaderModule, \n    CollectionitemModule,\n    ItemModule,\n    BsDropdownModule.forRoot(),\n    CollapseModule.forRoot(),\n    GridskeletonModule\n  ],\n  declarations: [MycollectionComponent, AddcollectionComponent, ViewcollectionComponent, DetailcollectionComponent, ActivitycollectionComponent]\n})\nexport class CollectionsModule { }\n","/*\nProject : Cryptotrades\nFileName :  collectionskeleton.module.ts\nAuthor : LinkWell\nFile Created : 21/07/2021\nCopyRights : LinkWell\nPurpose : This is the module file which used to load component and module related to collection skeleton\n*/\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CollectionskeletonComponent } from \"./collectionskeleton.component\";\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\n@NgModule({\n    imports: [\n        CommonModule,\n        NgxSkeletonLoaderModule,\n        MatIconModule,\n        MatProgressSpinnerModule\n    ],\n    exports: [CollectionskeletonComponent],\n    declarations: [CollectionskeletonComponent],\n    providers: [],\n})\nexport class CollectionskeletonModule {\n}","/*\nProject : Cryptotrades\nFileName :  activitycollection.component.ts\nAuthor : LinkWell\nFile Created : 21/07/2021\nCopyRights : LinkWell\nPurpose : This is the component which show activity by collection\n*/\nimport { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { Router } from '@angular/router';\nimport { ItemService } from 'src/app/services/item.service';\nimport { config } from 'src/app/constants/config';\n@Component({\n  selector: 'app-activitycollection',\n  templateUrl: './activitycollection.component.html',\n  styleUrls: ['./activitycollection.component.css']\n})\nexport class ActivitycollectionComponent implements OnInit {\n  mediaBase:string = config.media_path;\n  blockChainName:string = config.blockchain;\n  blockChainExplorer:string = config.blockchain_url;\n  currentUser:any;\n  collectionID:any;\n  histories: any = []\n  historyLoading:boolean = true;\n  pageHistory:number = 1\n  totalHistoryDocs:any = 0;\n  limitHistory:any = 10;\n  hasNextHistoryPage:boolean = false;\n\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private itemService: ItemService,\n  ) { \n    this.currentUser = this.userService.getUser()\n  }\n\n  ngOnInit(): void {\n    var url = this.router.url;\n    this.collectionID = url.replace('/activity','').split(\"/\").pop();\n    this.getHistoryList();\n  }\n\n  /**\n   * This is the function which used to get activitly list from api\n   */\n  getHistoryList = () => {\n    this.historyLoading = true;\n    var params = {\n      type:\"collection\",\n      collection_id: this.collectionID,\n      page: this.pageHistory\n    }\n    this.itemService.getHistory(params).subscribe(result=>{\n      if(result.status == true) {\n         this.histories = result.tempArray\n         if(result.data.totalDocs > (result.data.offset + result.tempArray.length)) {\n          this.hasNextHistoryPage = true;\n         } else {\n          this.hasNextHistoryPage = false;\n         }\n      } else {\n        this.hasNextHistoryPage = false;\n      }\n      this.historyLoading = false;\n    })\n  }\n\n  /**\n   * This is the function which used to get activitly list from api on next page click\n   */\n  nextHistoryPage = () => {\n    this.pageHistory = this.pageHistory + 1;\n    this.getHistoryList();\n  }\n\n  /**\n   * This is the function which used to get activitly list from api on previous page click\n   */\n  prevHistoryPage = () => {\n    this.pageHistory = this.pageHistory - 1;\n    this.getHistoryList();\n  }\n\n}\n","\n\n    <div class=\"collectionMainContainer\">\n        <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n          <div class=\"tradeBlock\">\n              <div class=\"animated fadeIn\">\n                  <div class=\"card\">\n                    <div class=\"card-header\">\n                      <i class=\"cil-swap-vertical titleIcon\"></i>\n                      Collection Activity\n                    </div>\n                    <div class=\"card-body historyBody\">\n                         <table class=\"table table-bordered table-striped table-sm\">\n                          <thead>\n                            <tr>\n                              <th>Item</th>\n                              <th>Event</th>\n                              <th>Price</th>\n                              <th>From</th>\n                              <th>To</th>\n                              <th>Transaction Hash</th>\n                              <th>Created Date</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let item of histories\">\n                              <td><div class=\"itemDetail\" [routerLink]=\"'/item/view/' + item.item_id._id\"><img [src]=\"mediaBase + '/images/item/thumb/' + item.item_id.thumb\"></div></td>\n                              <td>{{item.history_type}}</td>\n                              <td>{{item.price}} ETH</td>\n                              <td><div *ngIf=\"item.from_id != null\"><a href=\"javascript:void(0)\" [routerLink]=\"'/profile/' + item.from_id._id\">{{item.from_id.first_name}} {{item.from_id.last_name}}</a></div></td>\n                              <td><div *ngIf=\"item.to_id != null\"><a href=\"javascript:void(0)\" [routerLink]=\"'/profile/' + item.to_id._id\">{{item.to_id.first_name}} {{item.to_id.last_name}}</a></div></td>\n                              <td><div *ngIf=\"item.transaction_hash != ''\"><a [href]=\"blockChainExplorer + 'tx/'+item.transaction_hash\" target=\"_blank\">{{item.transaction_hash}}</a></div></td>\n                              <td>{{item.created_date | amDateFormat:'LL'}}</td>\n                            </tr>\n                            <tr *ngIf=\"histories.length==0 && historyLoading == false\">\n                                <td colspan=\"7\">\n                                  <alert type=\"info\" ng-reflect-type=\"info\">\n                                    <div role=\"alert\" class=\"alert alert-info\" ng-reflect-ng-class=\"\">\n                                     <strong>Oops!</strong> No Data Found\n                                    </div>\n                                  </alert>\n                                </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                        <nav>\n                          <ul class=\"pagination\" *ngIf=\"!historyLoading\">\n                            <li class=\"page-item\" *ngIf=\"pageHistory!=1\"><a class=\"page-link\" href=\"javascript:void(0)\" (click)=\"prevHistoryPage()\">Prev</a></li>\n                            <li class=\"page-item\" *ngIf=\"hasNextHistoryPage\"><a class=\"page-link\" href=\"javascript:void(0)\" (click)=\"nextHistoryPage()\">Next</a></li>\n                          </ul>\n                          <ul class=\"pagination\" *ngIf=\"historyLoading\">\n                            <li class=\"page-item\"><a class=\"page-link\" href=\"javascript:void(0)\">Loading...</a></li>\n                          </ul>\n                        </nav>\n                    </div>\n                  </div>\n                </div>\n          </div>\n      </div>\n  </div>\n  </div>\n</div>\n  ","/*\nProject : Cryptotrades\nFileName :  mycollection.component.ts\nAuthor : LinkWell\nFile Created : 21/07/2021\nCopyRights : LinkWell\nPurpose : This is the component which show collection list created by logged user\n*/\nimport { Component, OnInit } from '@angular/core';\nimport { CollectionService } from 'src/app/services/collection.service';\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-mycollection',\n  templateUrl: './mycollection.component.html',\n  styleUrls: ['./mycollection.component.css']\n})\nexport class MycollectionComponent implements OnInit {\n  loading:boolean = false;\n  page:number = 1\n  isApiLoading:boolean = false;\n  collections:any = [];\n  searchInput:string = '';\n  keyword:string = ''\n\n  constructor(\n    private collectionService: CollectionService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.getCollectionList();\n  }\n\n  getCollectionList = () => {\n    this.isApiLoading = true;\n    if(this.page==1) {\n      this.loading = true\n    }\n    var params = {\n      page: this.page,\n      type:'my',\n      keyword:this.keyword\n    }\n    this.collectionService.listCollection(params).subscribe(result=>{\n      this.isApiLoading = false;\n      console.log(result)\n      if(result.status == true) {\n         if(this.page == 1) {\n           this.collections = result.tempArray\n         } else {\n           for (let index = 0; index < result.tempArray.length; index++) {\n             const element = result.tempArray[index];\n             this.collections.push(element)\n           }\n         }\n      }\n      this.loading = false;\n    })\n  }\n\n  onNextPage = () => {\n    if(this.loading == true || this.isApiLoading == true) {\n      return;\n    }\n    this.page = this.page + 1;\n    this.getCollectionList();\n  }\n\n  collectionEvent = (event:any) => {\n    if (event.type == \"view\") {\n      this.router.navigate(['/collection/view/' + event.item._id])\n    } \n  }\n\n  searchAction = () => {\n    this.keyword = this.searchInput.replace(\" \", \"+\")\n    this.page = 1;\n    this.getCollectionList();\n  }\n\n  resetAction = () => {\n    this.searchInput = \"\";\n    this.keyword = \"\";\n    this.searchAction();\n  }\n\n}\n","<div class=\"appContainer\">\n   <div class=\"container\">\n       <div class=\"pageHeader\">\n            <h2>My collection</h2>\n            <p>Create, curate, and manage collections of unique NFTs to share and sell.</p>\n            <button class=\"btn btn-primary\" routerLink=\"/collection/add\">Create Collection</button>\n       </div>\n       <div class=\"card-body-filter\">\n         <div class=\"row\">\n             <div class=\"col-sm-12\">\n               <div>\n                 <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Search\" [(ngModel)]=\"searchInput\" (keyup.enter)=\"searchAction()\">\n               </div>\n             </div>\n           </div><!--/.row-->\n           <div class=\"card-body-filter-action\">\n             <button type=\"submit\" class=\"btn btn-primary\" (click)=\"searchAction()\"><i class=\"fa fa-search\"></i>Search</button>\n             <button type=\"submit\" class=\"btn btn-primary\" (click)=\"resetAction()\"><i class=\"fa fa-refresh\"></i>Reset</button>\n           </div>\n       </div>\n       <div class=\"pageContent\" infiniteScroll\n       [infiniteScrollDistance]=\"2\"\n       [infiniteScrollThrottle]=\"50\"\n       (scrolled)=\"onNextPage()\">\n          <app-collectionskeleton *ngIf=\"loading\"></app-collectionskeleton>\n          <div class=\"row\" *ngIf=\"!loading && collections.length>0\">\n            <div *ngFor=\"let item of collections\" class=\"col-md-4\">\n                <app-collectionitem [collection]=\"item\" (collectionEvent)=\"collectionEvent($event)\"> </app-collectionitem>\n           </div>\n        </div>\n          <app-nodata *ngIf=\"!loading && collections.length==0\" msg=\"There is no data to display here\"></app-nodata>\n       </div>\n\n   </div>\n</div>\n\n","/*\nProject : Cryptotrades\nFileName :  addcollection.component.ts\nAuthor : LinkWell\nFile Created : 21/07/2021\nCopyRights : LinkWell\nPurpose : This is the component which show for user to  add and edit collection\n*/\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { FileUploader} from 'ng2-file-upload';\nimport { API } from 'src/app/constants/api';\nimport { config } from 'src/app/constants/config';\nimport { CollectionService } from 'src/app/services/collection.service';\nimport { UserService } from 'src/app/services/user.service';\n@Component({\n  selector: 'app-addcollection',\n  templateUrl: './addcollection.component.html',\n  styleUrls: ['./addcollection.component.css']\n})\nexport class AddcollectionComponent implements OnInit {\n  subscription:any;\n  mediaBase:string = config.media_path\n  page_title = \"Add Your Collection\"\n  button_title = \"Create\"\n  collectionForm: FormGroup;\n  spinner: boolean = false;\n  currentUser:any;\n  collectionID:any = ''\n  collectionInfo:any;\n\n  public logouploader: FileUploader;\n  logoname:string = ''\n  collection_logo:string = ''\n\n  public banneruploader: FileUploader;\n  bannername:string = ''\n  collection_banner:string = ''\n  \n  constructor(\n    public formbuilder: FormBuilder,\n    private snackBar: MatSnackBar,\n    private userService: UserService,\n    private collectionService: CollectionService,\n    private router:Router,\n    private route:ActivatedRoute\n  ) { \n    this.currentUser = this.userService.getUser();\n    this.collectionForm = formbuilder.group({\n      'name': [null, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(255)])],\n      'royalties': [null,Validators.compose([Validators.required, Validators.pattern(\"^[0-9]+(.[0-9]{0,5})?$\")])],\n      'description': [null, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(1000)])],\n      'banner': [\"\"],\n      'image': [\"\"],\n    })\n    this.logouploader = new FileUploader({\n      url: API.base_url + '/media/collectionlogo',\n      allowedMimeType: ['image/png', 'image/jpeg'],\n      autoUpload: false,\n      isHTML5: true,\n      queueLimit: 1000,\n      removeAfterUpload: false,\n      headers: [\n        {\n          name: 'X-Requested-With',\n          value: 'XMLHttpRequest'\n        }\n      ]\n    });\n    \n    this.logouploader.onBuildItemForm = (fileItem: any, form: FormData): any => {\n    }\n\n    this.logouploader.onBeforeUploadItem = (item) => {\n      item.withCredentials = false;\n    }\n\n    this.logouploader.onAfterAddingFile = (file) => {\n      console.log(\"file is \", file);\n      var ext = (file.file.type == \"image/png\") ? \".png\" : \".jpg\"\n      this.logoname = this.currentUser.username + \"_\" + (new Date).getTime() +  ext;\n      file.file.name = this.logoname\n      \n    };\n    this.logouploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n      console.log(item);\n      console.log('Item');\n      this.collection_logo = this.logoname;\n      this.collectionForm.controls.image.setValue(this.collection_logo)\n      let that = this;\n      setTimeout(() => {\n        that.spinner = false;\n      }, 1000);\n    }; \n    \n    this.logouploader.onWhenAddingFileFailed = (item) => {\n      let that = this;\n      setTimeout(() => {\n        that.spinner = false;\n      }, 1000);\n      this.snackBar.open(\"Uploaded file should be JPEG/PNG\", \"\", { duration: 2000 });\n    }\n\n    this.banneruploader = new FileUploader({\n      url: API.base_url + '/media/collectionbanner',\n      allowedMimeType: ['image/png', 'image/jpeg'],\n      autoUpload: false,\n      isHTML5: true,\n      queueLimit: 1000,\n      removeAfterUpload: false,\n      headers: [\n        {\n          name: 'X-Requested-With',\n          value: 'XMLHttpRequest'\n        }\n      ]\n    });\n    \n    this.banneruploader.onBuildItemForm = (fileItem: any, form: FormData): any => {\n    }\n\n    this.banneruploader.onBeforeUploadItem = (item) => {\n      item.withCredentials = false;\n    }\n\n    this.banneruploader.onAfterAddingFile = (file) => {\n      console.log(\"file is \", file);\n      var ext = (file.file.type == \"image/png\") ? \".png\" : \".jpg\"\n      this.bannername = this.currentUser.username + \"_\" + (new Date).getTime() +  ext;\n      file.file.name = this.bannername\n      \n    };\n    this.banneruploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n      console.log(item);\n      console.log('Item');\n      this.collection_banner = this.bannername;\n      this.collectionForm.controls.banner.setValue(this.collection_banner)\n      let that = this;\n      setTimeout(() => {\n        that.spinner = false;\n      }, 1000);\n    }; \n    \n    this.banneruploader.onWhenAddingFileFailed = (item) => {\n      let that = this;\n      setTimeout(() => {\n        that.spinner = false;\n      }, 1000);\n      this.snackBar.open(\"Uploaded file should be JPEG/PNG\", \"\", { duration: 2000 });\n    }\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.route.params.subscribe(params => {\n      if(params.id) {\n        this.collectionID = params.id;\n        this.page_title = \"Update Your Collection\";\n        this.button_title = \"Update\"\n        this.getCollectionInfo()\n      } else {\n        this.collectionID = \"\"\n      }\n      console.log(params) //log the entire params object\n    });\n  }\n\n  /**\n   * This is the function which used to get collection details\n   */\n  getCollectionInfo = () => {\n    var params = {\n      collection_id : this.collectionID\n    }\n    this.collectionService.viewCollection(params).subscribe(result=>{\n      var resulter:any = result.result;\n      this.collectionInfo = resulter\n      this.updateCollectionInfo()\n    })\n  }\n\n  /**\n   * This is the function which used to parse collection detail \n   */\n  updateCollectionInfo = () => {\n    this.collection_logo = this.collectionInfo.image.length > 0 ? this.collectionInfo.image : '';\n    this.collection_banner = this.collectionInfo.banner.length > 0 ? this.collectionInfo.banner : '';\n    this.collectionForm.controls.name.setValue(this.collectionInfo.name);\n    this.collectionForm.controls.description.setValue(this.collectionInfo.description);\n    this.collectionForm.controls.image.setValue(this.collectionInfo.image);\n    this.collectionForm.controls.banner.setValue(this.collectionInfo.banner);\n    this.collectionForm.controls.royalties.setValue(this.collectionInfo.royalties);\n  }\n\n  ngOnDestroy() {\n    if(this.subscription) {\n      this.subscription.unsubscribe()\n    }\n  }\n\n  /**\n   * This is the function which used to upload collection logo on change\n   */\n  uploadLogo = () => {\n    this.spinner = true;\n    this.logouploader.uploadAll();\n  }\n\n  /**\n   * This is the function which used to upload collection banner on change\n   */\n  uploadBanner = () => {\n    this.spinner = true;\n    this.banneruploader.uploadAll();\n  }\n\n  /**\n   * This is the function which used to delete logo\n   */\n  deleteLogo = () => {\n    this.collection_logo = \"\"\n    this.collectionForm.controls.image.setValue(\"\")\n  }\n\n  /**\n   * This is the function which used to delete banner\n   */\n  deleteBanner = () => {\n    this.collection_banner = \"\"\n    this.collectionForm.controls.banner.setValue(\"\")\n  }\n\n\n  /**\n   * This is the function which used to validate collection before api submit \n   */\n  onSubmit = (formData:any) => {\n    if (this.collectionForm.valid) {\n      if(this.collection_logo == '') {\n        this.snackBar.open('Collection logo is required', \"\", { duration: 2000 });\n        return\n      }\n\n      if(this.collection_banner == '') {\n        this.snackBar.open('Collection banner is required', \"\", { duration: 2000 });\n        return\n      }\n      this.spinner = true;\n      if(this.collectionID!= \"\") {\n        this.updateCollectionApi({\n          name: formData.value.name,\n          description: formData.value.description,\n          royalties: formData.value.royalties,\n          image: formData.value.image,\n          banner: formData.value.banner,\n          collection_id:this.collectionID\n        });\n      } else {\n        this.collectionCreateApi({\n          name: formData.value.name,\n          description: formData.value.description,\n          royalties: formData.value.royalties,\n          image: formData.value.image,\n          banner: formData.value.banner,\n        });\n      }\n    } else {\n      if (this.collectionForm.controls.name.invalid) {\n        if (this.collectionForm.controls.name.errors) {\n          if (this.collectionForm.controls.name.errors.required) {\n            this.snackBar.open('Name is required', \"\", { duration: 2000 });\n          } else if (this.collectionForm.controls.name.errors.minlength) {\n            this.snackBar.open('Name required minimum 3 characters', \"\", { duration: 2000 });\n          } else if (this.collectionForm.controls.name.errors.maxlength) {\n            this.snackBar.open('Name required maximum 255 characters', \"\", { duration: 2000 });\n          } \n        }\n      } else if (this.collectionForm.controls.description.invalid) {\n        if (this.collectionForm.controls.description.errors) {\n          if (this.collectionForm.controls.description.errors.required) {\n            this.snackBar.open('Description is required', \"\", { duration: 2000 });\n          } else {\n            this.snackBar.open('Description should be between 3 to 1000 characters', \"\", { duration: 2000 });\n          }\n        }\n      } else if (this.collectionForm.controls.royalties.invalid) {\n        if (this.collectionForm.controls.royalties.errors) {\n          if (this.collectionForm.controls.royalties.errors.required) {\n            this.snackBar.open('Royalties value is required', \"\", { duration: 2000 });\n          } else {\n            this.snackBar.open('Royalties value should be numeric', \"\", { duration: 2000 });\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * This is the function which used to update collection from api\n   */\n  updateCollectionApi = (params:any) => {\n    this.collectionService.updateCollection(params).subscribe(result=>{\n      if(result.status == true) {\n        this.router.navigate(['/collection/mycollection']);\n      }\n      this.spinner = false\n      this.snackBar.open(result.message, \"\", { duration: 2000 });\n    })\n  }\n\n  /**\n   * This is the function which used to add collection from api\n   */\n  collectionCreateApi = (params:any) => {\n    this.collectionService.addCollection(params).subscribe(result=>{\n      if(result.status == true) {\n        this.router.navigate(['/collection/mycollection']);\n      }\n      this.spinner = false\n      this.snackBar.open(result.message, \"\", { duration: 2000 });\n    })\n  }\n\n}\n","<div class=\"appContainer\">\n    <div class=\"container\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-lg-8\">\n                <div class=\"card\">\n                <div class=\"card-header\">\n                    {{page_title}}\n                </div>\n                <div class=\"card-body\">\n                    <form [formGroup]=\"collectionForm\" (ngSubmit)=\"onSubmit(collectionForm)\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <div class=\"form-group\">\n                                <label for=\"name\">Name</label>\n                                <input type=\"text\" class=\"form-control\" placeholder=\"Enter Collection Name\" formControlName=\"name\" required>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-12\">\n                            <div class=\"form-group\">\n                                <label for=\"name\">Royalties</label>\n                                <input type=\"text\" class=\"form-control\" placeholder=\"Enter Royalties Percentage\" formControlName=\"royalties\" required>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-12\">\n                            <div class=\"form-group\">\n                                <label for=\"description\">Description</label>\n                                <textarea class=\"form-control\" placeholder=\"Enter Description\" formControlName=\"description\"></textarea>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-12\">\n                            <div class=\"form-group\">\n                                <label for=\"email\">Collection Logo</label>\n                                <div class=\"image-help-block\">This image will also be used for navigation. 350 x 350 recommended.</div>\n                                <div class=\"preview_empty_container\" *ngIf=\"collection_logo == ''\">\n                                    <div class=\"preview_empty_container_img\">\n                                        <i class=\"cil-image\"></i>\n                                    </div>\n                                    <p>No Logo Selected</p>\n                                    <div class=\"uploader_btn_container\">\n                                        <button mat-menu-item class=\"btn btn-primary\" type=\"button\">\n                                            <i class=\"cil-image-plus\"></i>\n                                            <span>Select Image</span>\n                                            <input type=\"file\" ng2FileSelect [uploader]=\"logouploader\" (change)=\"uploadLogo()\" single />\n                                        </button>\n                                        \n                                    </div>\n                                </div>\n                                <div class=\"image_preview\" *ngIf=\"collection_logo != ''\">\n                                    <img [src]=\"mediaBase + '/images/collection/logo/' + collection_logo\" />\n                                    <button class=\"image_preview_close\" (click)=\"deleteLogo()\">\n                                        remove\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-12\">\n                            <div class=\"form-group\">\n                                <label for=\"email\">Collection Banner</label>\n                                <div class=\"image-help-block\">This image will appear at the top of your collection page. Avoid including too much text in this banner image, as the dimensions change on different devices. 1400 x 400 recommended.</div>\n                                <div class=\"preview_empty_container\" *ngIf=\"collection_banner == ''\">\n                                    <div class=\"preview_empty_container_img\">\n                                        <i class=\"cil-image\"></i>\n                                    </div>\n                                    <p>No Banner Selected</p>\n                                    <div class=\"uploader_btn_container\">\n                                        <button mat-menu-item class=\"btn btn-primary\" type=\"button\">\n                                            <i class=\"cil-image-plus\"></i>\n                                            <span>Select Image</span>\n                                            <input type=\"file\" ng2FileSelect [uploader]=\"banneruploader\" (change)=\"uploadBanner()\" signle />\n                                        </button>\n\n                                    </div>\n                                </div>\n                                <div class=\"image_preview\" *ngIf=\"collection_banner != ''\">\n                                    <img [src]=\"mediaBase + '/images/collection/banner/' + collection_banner\" />\n                                    <button class=\"image_preview_close\" (click)=\"deleteBanner()\">\n                                        remove\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <input type=\"submit\" class=\"btn btn-primary px-4\" [value]=\"button_title\" />\n                        </div>\n                    </div>\n                    </form>\n                \n                </div>\n                </div>\n            </div>\n            </div>\n\n    </div>\n</div>\n<app-loader *ngIf=\"spinner\"></app-loader>","/*\nProject : Cryptotrades\nFileName :  collectionskeleton.component.ts\nAuthor : LinkWell\nFile Created : 21/07/2021\nCopyRights : LinkWell\nPurpose : This is the component file which used to show collection skeleton\n*/\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-collectionskeleton',\n  templateUrl: './collectionskeleton.component.html',\n  styleUrls: ['./collectionskeleton.component.css']\n})\nexport class CollectionskeletonComponent implements OnInit {\n  collections:any = [1,2,3,4,5,6,7,8,9]\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-4\" *ngFor=\"let item of collections\">\n        <div class=\"collectionItem\">\n            <div class=\"collectionItemImg\">\n                <ngx-skeleton-loader count=\"1\" [theme]=\"{ \n                    'height': '100%',\n                    'margin-top.px': 0,\n                    'margin-bottom.px':0,\n                    'width':'100%', \n                    'background-color': '#c3c3c3',\n                    'border-radius':0\n                    }\"></ngx-skeleton-loader>\n                    <div class=\"collectionItemAuthor\">\n                        <div class=\"collectionItemAuthorInner\">\n                            <ngx-skeleton-loader count=\"1\" [theme]=\"{ \n                                'height.px': 64,\n                                'width.px': 64,\n                                'margin-top.px': 0,\n                                'margin-bottom.px':0,\n                                'background-color': '#c3c3c3',\n                                'border-radius':'50%'\n                                }\"></ngx-skeleton-loader>\n                        </div>\n                    </div>\n            </div>\n\n            <div class=\"collectionItemTitle\">\n                <ngx-skeleton-loader count=\"1\" [theme]=\"{ \n                    'height.px': 12,\n                    'margin-top.px': 0,\n                    'margin-bottom.px':0,\n                    'width':'70%', \n                    'background-color': '#c3c3c3'\n                    }\"></ngx-skeleton-loader> \n            </div>\n            <div class=\"collectionItemCount\">\n\n                <ngx-skeleton-loader count=\"1\" [theme]=\"{ \n                    'height.px': 12,\n                    'margin-top.px': 0,\n                    'margin-bottom.px':0,\n                    'width':'50%', \n                    'background-color': '#c3c3c3'\n                    }\"></ngx-skeleton-loader>\n            </div>\n        </div>\n    </div>\n</div>","\n/*\nProject : Cryptotrades\nFileName :  collectionitem.component.ts\nAuthor : LinkWell\nFile Created : 21/07/2021\nCopyRights : LinkWell\nPurpose : This is the component file which used to define collection item as sub compoonent\n*/\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { config } from 'src/app/constants/config';\n\n@Component({\n  selector: 'app-collectionitem',\n  templateUrl: './collectionitem.component.html',\n  styleUrls: ['./collectionitem.component.css']\n})\nexport class CollectionitemComponent implements OnInit {\n  mediaBase: string = config.media_path\n  @Input() collection: any;\n  @Output() collectionEvent = new EventEmitter<any>();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * This is the function which used send notification to parent component for collection choose\n   */\n  collectionAction = () => {\n    this.collectionEvent.emit({\n      type:\"view\",\n      item:this.collection\n    });\n  }\n\n}\n","\n<div class=\"collectionItem\" (click)=\"collectionAction()\">\n    <div class=\"collectionItemImg\">\n        <img [src]=\"mediaBase + '/images/collection/banner/' + collection.banner\" class=\"collectionItemImgBanner\"/>\n            <div class=\"collectionItemAuthor\">\n                <div class=\"collectionItemAuthorInner\">\n                    <img [src]=\"mediaBase + '/images/collection/logo/' + collection.image\" />\n                </div>\n            </div>\n    </div>\n\n    <div class=\"collectionItemTitle\">\n        {{collection.name}}\n    </div>\n    <div class=\"collectionItemCount\">\n        {{collection.item_count}} Items\n    </div>\n</div>","/*\nProject : Cryptotrades\nFileName :  viewcollection.component.ts\nAuthor : LinkWell\nFile Created : 21/07/2021\nCopyRights : LinkWell\nPurpose : This is the component which show collection view for all users\n*/\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { config } from 'src/app/constants/config';\nimport { CollectionService } from 'src/app/services/collection.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\nimport {ModalDirective} from 'ngx-bootstrap/modal';\nimport { ItemService } from 'src/app/services/item.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n@Component({\n  selector: 'app-viewcollection',\n  templateUrl: './viewcollection.component.html',\n  styleUrls: ['./viewcollection.component.css']\n})\nexport class ViewcollectionComponent implements OnInit {\n  spinner: boolean = false\n  subscription:any;\n  mediaBase:string = config.media_path;\n  ownCollection:boolean = false;\n  currentUser:any;\n  collectionID:string = \"\";\n  collectionInfo:any;\n  collection_banner:string = \"default.png\"\n  collection_logo:string = \"default.png\"\n  collection_desc:string = \"\";\n  collection_name:string = \"\";\n\n  items:any = [];\n  page:any = 1;\n  isApiLoading:boolean = false;\n  loading:boolean = true\n  keyword:string = \"\"\n  searchInput:string = \"\";\n  @ViewChild('confirmationModal') public confirmationModal: ModalDirective;\n  @ViewChild('confirmationItemModal') public confirmationItemModal: ModalDirective;\n  selectedItem:any;\n  constructor(\n    private collectionService: CollectionService,\n    private userService: UserService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private itemService: ItemService,\n    private snackBar: MatSnackBar,\n  ) { \n    this.confirmationModal = this.confirmationItemModal =this.subscription;\n    this.currentUser = this.userService.getUser();\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.route.params.subscribe(params => {\n      if(params.id) {\n        this.loading = true\n        this.collectionID = params.id;\n        this.getCollectionInfo();\n      } else {\n        this.collectionID = \"\"\n      }\n      console.log(params) //log the entire params object\n    });\n  }\n\n  ngOnDestroy() {\n    if(this.subscription) {\n      this.subscription.unsubscribe()\n    }\n  }\n\n  /**\n   * This is the function which used to get collection detail from api\n   */\n  getCollectionInfo() {\n    this.collectionService.viewCollection({\n      collection_id:this.collectionID\n    }).subscribe(result=>{\n      this.collectionInfo = result.result;\n      this.collection_banner = this.collectionInfo.banner;\n      this.collection_logo = this.collectionInfo.image;\n      this.collection_name = this.collectionInfo.name;\n      this.collection_desc = this.collectionInfo.description;\n      this.ownCollection = (this.collectionInfo.author_id == this.currentUser.user_id) ? true : false;\n      this.page = 1;\n      this.getItemList();\n    })\n  }\n\n   /**\n   * This is the function which used to delete collection by id\n   */\n  deleteAction = ()=> {\n    this.spinner = true\n    this.confirmationModal.hide()\n    this.collectionService.deleteCollection({\n      collection_id: this.collectionID\n    }).subscribe(result=>{\n      this.spinner = false;\n      this.router.navigate([\"/collection/mycollection\"])\n    })\n  }\n\n  /**\n   * This is the function which used to get item list by collection \n   */\n  getItemList = () => {\n    this.isApiLoading = true;\n    var params = {\n      page: this.page,\n      type:'mycollection',\n      collection_id: this.collectionInfo._id,\n      keyword:this.keyword\n    }\n    console.log(this.page)\n    this.itemService.listItem(params).subscribe(result=>{\n      this.isApiLoading = false;\n      console.log(result); \n      if(result.status == true) {\n         if(this.page == 1) {\n           this.items = result.tempArray\n         } else {\n           for (let index = 0; index < result.tempArray.length; index++) {\n             const element = result.tempArray[index];\n             this.items.push(element)\n           }\n         }\n      }\n     this.loading = false;\n    })\n  }\n\n  /**\n   * This is the function which used to get item list by collection on page scroll\n   */\n  onNextPage = () => {\n    if(this.loading == true && this.isApiLoading == true ) {\n      return;\n    }\n    this.page = this.page + 1;\n    this.getItemList();\n  }\n\n  /**\n   * This is the output function which used to navgate, edit and publish item\n   */\n  itemEvent = (event:any) => {\n    if(event.type == \"edit\") {\n      this.router.navigate(['/item/edit/'+event.item._id])\n    } else if (event.type == \"delete\") {\n      this.confirmationItemModal.show();\n      this.selectedItem = event.item;\n    } else if(event.type == \"view\") {\n      this.router.navigate(['/item/view/'+event.item._id])\n    } else if(event.type == \"publish\") {\n      this.spinner = true;\n      this.itemService.publishItem({\n        item_id: event.item._id\n      }).subscribe(result=>{\n        if(result.status == true) {\n          this.resetAction();\n        }\n        this.snackBar.open(\"Item published successfully\", \"\", { duration: 2000 });\n        this.spinner = false\n      })\n    }\n  }\n\n  /**\n   * This is the  function which used to delete item and update item array\n   */\n  itemDeleteAction = () => {\n    var index = this.items.findIndex((itemobj:any)=> {\n      return itemobj._id == this.selectedItem._id\n    })\n    if(index != -1) {\n      this.items.splice(index,1);\n      this.itemService.deleteItem({\n        item_id:this.selectedItem._id\n      }).subscribe(result=>{\n      })\n    }\n    this.confirmationItemModal.hide()\n  }\n\n  /**\n   * This is the  function which used to search item by keyword with collection filter\n   */\n  searchAction = () => {\n    this.loading = true;\n    this.keyword = this.searchInput.replace(\" \", \"+\")\n    this.page = 1;\n    this.getItemList();\n  }\n\n  /**\n   * This is the  function which used to reset search by keyword with collection filter\n   */\n  resetAction = () => {\n    this.loading = true;\n    this.searchInput = \"\";\n    this.keyword = \"\";\n    this.searchAction();\n  }\n\n}\n","<div class=\"appContainer\">\n    <div class=\"collectionHeader\">\n        <div class=\"collectionCover\">\n            <img [src]=\"mediaBase + '/images/collection/banner/' + collection_banner\" />\n        </div>\n        <div class=\"collectionLogo\">\n            <div class=\"collectionLogoInner\">\n                <img [src]=\"mediaBase+'/images/collection/logo/'+collection_logo\">\n            </div>\n        </div>\n        <div class=\"settingsAction dropdown dropright\" *ngIf=\"ownCollection\" dropdown>\n            <button id=\"collectionlink-dropdown\" class=\"btn btn-secondary\" dropdownToggle aria-controls=\"collection-dropdown\" data-offset=\"10,20\"><i class=\"icon-settings\"></i></button>\n            <div id=\"collection-dropdown\" class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"collectionlink-dropdown\" *dropdownMenu>\n                <a class=\"dropdown-item\" href=\"javascript:void(0)\" [routerLink]=\"'/item/add/'+collectionID\">Add Item</a>\n                <a class=\"dropdown-item\" href=\"javascript:void(0)\" [routerLink]=\"'/collection/edit/'+collectionID\">Edit Collection</a>\n                <a class=\"dropdown-item\" href=\"javascript:void(0)\" *ngIf=\"collectionInfo.item_count==0\" (click)=\"confirmationModal.show()\">Delete Collection</a>\n                <a class=\"dropdown-item\" href=\"javascript:void(0)\" [routerLink]=\"'/collection/activity/'+collectionID\">Activity</a> \n            </div>\n        </div>\n    </div>\n    <div class=\"collectionSubHeader\" *ngIf=\"collectionInfo!=null\">\n        <h2>{{collection_name}}</h2>\n        <div class=\"collection_stats\">\n            <ul>\n                <li><span>{{collectionInfo.item_count_str}}</span><label>Items</label></li>\n                <li><span>{{collectionInfo.royalties}}%</span><label>Royalties</label></li>\n                <li><span>{{collectionInfo.volume_traded_str}}</span><label>Volume Traded</label></li>\n            </ul>\n        </div>\n        <p>{{collection_desc}}</p>\n    </div>\n    <div class=\"container\">\n    <div class=\"card-body-filter\">\n      \n        <div class=\"row\">\n          <div class=\"col-sm-12\">\n            <div>\n              <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Search\" [(ngModel)]=\"searchInput\" (keyup.enter)=\"searchAction()\">\n            </div>\n          </div>\n        </div><!--/.row-->\n        <div class=\"card-body-filter-action\">\n          <button type=\"submit\" class=\"btn btn-primary\" (click)=\"searchAction()\"><i class=\"fa fa-search\"></i>Search</button>\n          <button type=\"submit\" class=\"btn btn-primary\" (click)=\"resetAction()\"><i class=\"fa fa-refresh\"></i>Reset</button>\n        </div>\n      </div>\n\n    </div>\n    <div class=\"collectionMainContainer\" infiniteScroll\n    [infiniteScrollDistance]=\"2\"\n    [infiniteScrollThrottle]=\"50\"\n    (scrolled)=\"onNextPage()\">\n        <div class=\"container\">\n            \n            <app-itemskeleton *ngIf=\"loading\"></app-itemskeleton>\n            <app-nodata *ngIf=\"!loading && items.length==0\" msg=\"There is no data to display here\"></app-nodata>\n            <div class=\"row\" *ngIf=\"!loading && items.length>0\">\n                <div class=\"col-md-4\" *ngFor=\"let item of items\">\n                      <app-item [item]=\"item\" (itemEvent)=\"itemEvent($event)\"> </app-item>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<div bsModal #confirmationModal=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\">Confirmation</h4>\n          <button type=\"button\" class=\"close\" (click)=\"confirmationModal.hide()\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <p>Are you sure to delete this collection?</p>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"confirmationModal.hide()\">Cancel</button>\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"deleteAction()\">Confirm</button>\n        </div>\n      </div><!-- /.modal-content -->\n    </div><!-- /.modal-dialog -->\n  </div><!-- /.modal -->\n\n  <div bsModal #confirmationItemModal=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\">Confirmation</h4>\n          <button type=\"button\" class=\"close\" (click)=\"confirmationItemModal.hide()\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <p>Are you sure to delete this item?</p>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"confirmationItemModal.hide()\">Cancel</button>\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"itemDeleteAction()\">Confirm</button>\n        </div>\n      </div><!-- /.modal-content -->\n    </div><!-- /.modal-dialog -->\n  </div><!-- /.modal -->\n  <app-loader *ngIf=\"spinner\"></app-loader>"]}